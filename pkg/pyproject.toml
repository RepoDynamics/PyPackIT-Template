[tool.mypy]
packages = ["my_new_project"]
warn_return_any = true
strict = true
show_error_context = true
show_column_numbers = true
show_error_code_links = true
pretty = true
color_output = true
cache_dir = ".local/cache/mypy"
show_traceback = true
raise_exceptions = true
any_exprs_report = ".local/report/mypy"
html_report = ".local/report/mypy"
linecount_report = ".local/report/mypy"
linecoverage_report = ".local/report/mypy"
lineprecision_report = ".local/report/mypy"
txt_report = ".local/report/mypy"
xml_report = ".local/report/mypy"
verbosity = 2

[project]
name = "My-New-Project"
description = "A Placeholder Project Title"
keywords = [
    "First Keyword",
    "Second Keyword",
    "Third Keyword",
    "Fourth Keyword",
    "Fifth Keyword",
    "Sixth Keyword",
]
classifiers = [
    "License :: OSI Approved :: GNU Affero General Public License v3 or later (AGPLv3+)",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Typing :: Typed",
    "Development Status :: 1 - Planning",
]
authors = [
    {name = "RepoDynamics", email = "contact@repodynamics.com"},
]
maintainers = [
    {name = "RepoDynamics", email = "contact@repodynamics.com"},
]
readme = "pkg/README.md"
requires-python = ">= 3.10"
dependencies = [
    "pkgdata",
]
dynamic = [
    "version",
]
license = {file = "LICENSE"}

[project.urls]
Homepage = "https://RepoDynamics.github.io/PyPackIT-Template"
Documentation = "https://RepoDynamics.github.io/PyPackIT-Template/manual"
Source = "https://github.com/RepoDynamics/PyPackIT-Template"
Download = "https://github.com/RepoDynamics/PyPackIT-Template/releases"
News = "https://RepoDynamics.github.io/PyPackIT-Template/news"
Issue-Tracker = "https://github.com/RepoDynamics/PyPackIT-Template/issues"

[project.scripts]
my_new_project = "my_new_project:__main__"

[build-system]
requires = [
    "setuptools >= 72.1.0",
    "versioningit >= 3.1.2",
]
build-backend = "setuptools.build_meta"

[setuptools]
include-package-data = true
zip-safe = false

[setuptools.packages.find]
where = ["src"]
namespaces = true

[versioningit]
[versioningit.vcs]
method = "git"
match = ["ver/[0-9]*.[0-9]*.[0-9]*"]
default-tag = "ver/0.0.0"

[versioningit.tag2version]
rmprefix = "ver/"

[versioningit.format]
distance = "{base_version}+{distance}.{committer_date:%Y.%m.%d}.{revision}"
dirty = "{base_version}+0.{committer_date:%Y.%m.%d}.{revision}.dirty"
distance-dirty = "{base_version}+{distance}.{committer_date:%Y.%m.%d}.{revision}.dirty"

[versioningit.onbuild]
method = "replace-version"
regex = "^\\\\s*__version_details__\\\\s*=\\\\s*(?P<version>.*)"
require-match = true
source-file = "pkg/src/my_new_project/__init__.py"
build-file = "my_new_project/__init__.py"
replacement = "dict(\n  version: \"{version}\",\n  author_date: \"{author_date:%Y.%m.%d}\",\n  build_date: \"{build_date:%Y.%m.%d}\",\n  branch: \"{branch}\",\n  distance: \"{distance}\",\n  head_commit_hash: \"{revision}\",\n)\n"
